---
- name: Install rbenv
  command: "{{ anyenv_root }}/bin/anyenv install rbenv"
  args:
    creates: "{{ anyenv_root }}/envs/rbenv"
  environment:
    PATH: "{{ anyenv_root }}/bin:{{ ansible_env.PATH }}"

- name: Check the verions file exists
  stat:
    path: "{{ rbenv_root }}/version"
  register:
    rb_version_file

- name: Check if ruby is installed
  command: "cat {{ rbenv_root }}/version"
  register: rb_version
  changed_when: false
  when: rb_version_file.stat.exists
  tags:
    - skip_ansible_lint

# Setup build environment
# https://github.com/rbenv/ruby-build/wiki

- name: Setup build environment
  become: yes
  apt:
    name: "{{ item }}"
    state: present
  with_items:
    - curl
    - autoconf
    - bison
    - build-essential
    - libssl-dev
    - libyaml-dev
    - libreadline6-dev
    - zlib1g-dev
    - libncurses5-dev
    - libffi-dev
    - libgdbm3
    - libgdbm-dev
  when: rb_version.stdout is undefined or rb_version.stdout is version(ruby_version, '<')

- name: Install the ruby and set the global ruby version
  command: "{{ item }}"
  environment:
    PATH: "{{ rbenv_root }}/bin:{{ rbenv_root }}/plugins/ruby-build/bin:{{ ansible_env.PATH }}"
    RBENV_ROOT: "{{ rbenv_root }}"
  with_items:
    - "rbenv install {{ ruby_version }}"
    - "rbenv global {{ ruby_version }}"
  when: rb_version.stdout is undefined or rb_version.stdout is version(ruby_version, '<')
