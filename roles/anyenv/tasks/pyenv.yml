---
- name: Install pyenv
  command: "{{ anyenv_root }}/bin/anyenv install pyenv"
  args:
    creates: "{{ anyenv_root }}/envs/pyenv"
  environment:
    PATH: "{{ anyenv_root }}/bin:{{ ansible_env.PATH }}"

- name: Check the verions file exists
  stat:
    path: "{{ pyenv_root }}/version"
  register:
    py_version_file

- name: Check if python is installed
  command: "cat {{ pyenv_root }}/version"
  register: py_version
  changed_when: false
  when: py_version_file.stat.exists
  tags:
    - skip_ansible_lint

# Setup build environment
# https://github.com/pyenv/pyenv/wiki

- name: Setup build environment
  become: yes
  apt:
    name: "{{ item }}"
    state: present
  with_items:
    - make
    - build-essential
    - libssl-dev
    - zlib1g-dev
    - libbz2-dev
    - libreadline-dev
    - libsqlite3-dev
    - wget
    - curl
    - llvm
    - libncurses5-dev
    - xz-utils
    - tk-dev
  when: py_version.stdout is undefined or py_version.stdout is version(python_version, '<')

- name: Install the python and set the global python version
  command: "{{ item }}"
  environment:
    PATH: "{{ pyenv_root }}/bin:{{ pyenv_root }}/plugins/python-build/bin:{{ ansible_env.PATH }}"
    RBENV_ROOT: "{{ pyenv_root }}"
  with_items:
    - "pyenv install {{ python2_version }}"
    - "pyenv install {{ python3_version }}"
    - "pyenv global {{ python2_version }}"
  when: py_version.stdout is undefined or py_version.stdout is version(python_version, '<')
